
extend type Query {
  userInRole: User
}


extend type Mutation {
  signup(input: SignupInput!): SignupPayload
  signin(input: SigninInput): SigninPayload
  # guestSignin: GuestSigninPayload
  signout: SignoutPayload
  changePassword(input: ChangePasswordInput): ChangePasswordPayload
}


input SignupInput {
  firstname: String!
  lastname: String!
  email: String!
  password: String!
}
type SignupPayload {
  user: User
  token: String
  error: String
}

input SigninInput {
  email: String!
  password: String!
}
type SigninPayload {
  user: User
  token: String
  error: String
}
# type GuestSigninPayload {
#   token: String
#   error: String
# }

type SignoutPayload {
  error: String
}

input ChangePasswordInput{
  oldPassword: String!
  newPassword: String!
}

type ChangePasswordPayload {
  error: String
}
